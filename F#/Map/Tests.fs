(* Mikhail Tashkinov (c) 2014
   Test for mymap
*)

module Tets
open MyMap

let test1() =
    let t = new System.Diagnostics.Stopwatch()
    let mutable m1 = new Map<int, int>(Seq.empty)
    let mutable m2 = new Collections.Map<int, int>(Seq.empty)
    t.Start()
    m1<-m1.Add(5, 5)
    m1<-m1.Add(9, 9)
    m1<-m1.Add(20, 20)
    m1<-m1.Add(19, 19)
    m1<-m1.Add(1, 1)
    m1<-m1.Add(8, 8)
    m1<-m1.Add(14, 14)
    m1<-m1.Add(10, 10)
    m1<-m1.Add(12, 12)
    m1<-m1.Add(2, 2)
    m1<-m1.Add(25, 25)
    m1<-m1.Add(29, 29)
    m1<-m1.Add(40, 40)
    m1<-m1.Add(39, 39)
    m1<-m1.Add(21, 21)
    m1<-m1.Add(28, 28)
    m1<-m1.Add(34, 34)
    m1<-m1.Add(30, 30)
    m1<-m1.Add(32, 32)
    m1<-m1.Add(22, 22)
    m1<-m1.Add(23, 23)
    m1<-m1.Add(37, 37)
    m1<-m1.Add(38, 38)
    m1<-m1.Add(27, 27)
    m1<-m1.Add(36, 36)
    m1<-m1.Add(24, 24)
    m1<-m1.Add(35, 35)
    m1<-m1.Add(26, 26)
    m1<-m1.Add(33, 33)
    m1<-m1.Add(31, 31)
    m1<-m1.Add(3, 3)
    m1<-m1.Add(17, 17)
    m1<-m1.Add(18, 18)
    m1<-m1.Add(7, 7)
    m1<-m1.Add(16, 16)
    m1<-m1.Add(4, 4)
    m1<-m1.Add(15, 15)
    m1<-m1.Add(6, 6)
    m1<-m1.Add(13, 13)
    m1<-m1.Add(11, 11)
    t.Stop()
    printfn "%A" (t.ElapsedMilliseconds.ToString())

    t.Restart()
    m2<-m2.Add(5, 5)
    m2<-m2.Add(9, 9)
    m2<-m2.Add(20, 20)
    m2<-m2.Add(19, 19)
    m2<-m2.Add(1, 1)
    m2<-m2.Add(8, 8)
    m2<-m2.Add(14, 14)
    m2<-m2.Add(10, 10)
    m2<-m2.Add(12, 12)
    m2<-m2.Add(2, 2)
    m2<-m2.Add(25, 25)
    m2<-m2.Add(29, 29)
    m2<-m2.Add(40, 40)
    m2<-m2.Add(39, 39)
    m2<-m2.Add(21, 21)
    m2<-m2.Add(28, 28)
    m2<-m2.Add(34, 34)
    m2<-m2.Add(30, 30)
    m2<-m2.Add(32, 32)
    m2<-m2.Add(22, 22)
    m2<-m2.Add(23, 23)
    m2<-m2.Add(37, 37)
    m2<-m2.Add(38, 38)
    m2<-m2.Add(27, 27)
    m2<-m2.Add(36, 36)
    m2<-m2.Add(24, 24)
    m2<-m2.Add(35, 35)
    m2<-m2.Add(26, 26)
    m2<-m2.Add(33, 33)
    m2<-m2.Add(31, 31)
    m2<-m2.Add(3, 3)
    m2<-m2.Add(17, 17)
    m2<-m2.Add(18, 18)
    m2<-m2.Add(7, 7)
    m2<-m2.Add(16, 16)
    m2<-m2.Add(4, 4)
    m2<-m2.Add(15, 15)
    m2<-m2.Add(6, 6)
    m2<-m2.Add(13, 13)
    m2<-m2.Add(11, 11)
    t.Stop()
    printfn "%A" (t.ElapsedMilliseconds.ToString())

let test2() =
    let t = new System.Diagnostics.Stopwatch()
    let mutable m1 = new Map<int, int>(Seq.empty)
    let mutable m2 = new Collections.Map<int, int>(Seq.empty)

    t.Start()
    for i in 1..100000 do
        m1<-m1.Add(i, i)
    t.Stop()
    printfn "%A" (t.ElapsedMilliseconds.ToString())

    t.Restart()
    for i in 1..100000 do
        m2<-m2.Add(i, i)
    t.Stop()
    printfn "%A" (t.ElapsedMilliseconds.ToString())

let test3() =
    let t = new System.Diagnostics.Stopwatch()
    let mutable m1 = new Map<int, int>(Seq.empty)
    let mutable m2 = new Collections.Map<int, int>(Seq.empty)

    t.Start()
    m1<-m1.Add(5, 5)
    m1<-m1.Remove(5)
    m1<-m1.Add(9, 9)
    m1<-m1.Add(20, 20)
    m1<-m1.Add(19, 19)
    m1<-m1.Add(1, 1)
    m1<-m1.Add(8, 8)
    m1<-m1.Add(14, 14)
    m1<-m1.Remove(19)
    m1<-m1.Remove(8)
    m1<-m1.Add(10, 10)
    m1<-m1.Add(12, 12)
    m1<-m1.Add(2, 2)
    m1<-m1.Remove(9)
    m1<-m1.Remove(20)
    m1<-m1.Remove(14)
    m1<-m1.Add(3, 3)
    m1<-m1.Remove(1)
    m1<-m1.Remove(2)
    m1<-m1.Add(17, 17)
    m1<-m1.Add(18, 18)
    m1<-m1.Add(7, 7)
    m1<-m1.Add(16, 16)
    m1<-m1.Remove(10)
    m1<-m1.Remove(6)
    m1<-m1.Add(4, 4)
    m1<-m1.Remove(12)
    m1<-m1.Remove(17)
    m1<-m1.Add(15, 15)
    m1<-m1.Add(6, 6)
    m1<-m1.Add(13, 13)
    m1<-m1.Remove(3)
    m1<-m1.Remove(7)
    m1<-m1.Remove(13)
    m1<-m1.Remove(15)
    m1<-m1.Remove(16)
    m1<-m1.Remove(18)
    m1<-m1.Add(11, 11)
    m1<-m1.Remove(4)
    m1<-m1.Remove(11)
    t.Stop()
    printfn "%A" (t.ElapsedMilliseconds.ToString())

    t.Restart()
    m2<-m2.Add(5, 5)
    m2<-m2.Remove(5)
    m2<-m2.Add(9, 9)
    m2<-m2.Add(20, 20)
    m2<-m2.Add(19, 19)
    m2<-m2.Add(1, 1)
    m2<-m2.Add(8, 8)
    m2<-m2.Add(14, 14)
    m2<-m2.Remove(19)
    m2<-m2.Remove(8)
    m2<-m2.Add(10, 10)
    m2<-m2.Add(12, 12)
    m2<-m2.Add(2, 2)
    m2<-m2.Remove(9)
    m2<-m2.Remove(20)
    m2<-m2.Remove(14)
    m2<-m2.Add(3, 3)
    m2<-m2.Remove(1)
    m2<-m2.Remove(2)
    m2<-m2.Add(17, 17)
    m2<-m2.Add(18, 18)
    m2<-m2.Add(7, 7)
    m2<-m2.Add(16, 16)
    m2<-m2.Remove(10)
    m2<-m2.Remove(6)
    m2<-m2.Add(4, 4)
    m2<-m2.Remove(12)
    m2<-m2.Remove(17)
    m2<-m2.Add(15, 15)
    m2<-m2.Add(6, 6)
    m2<-m2.Add(13, 13)
    m2<-m2.Remove(3)
    m2<-m2.Remove(7)
    m2<-m2.Remove(13)
    m2<-m2.Remove(15)
    m2<-m2.Remove(16)
    m2<-m2.Remove(18)
    m2<-m2.Add(11, 11)
    m2<-m2.Remove(4)
    m2<-m2.Remove(11)
    t.Stop()
    printfn "%A" (t.ElapsedMilliseconds.ToString())

let test4() =
    let t = new System.Diagnostics.Stopwatch()
    let mutable m1 = new Map<int, int>(Seq.empty)
    let mutable m2 = new Collections.Map<int, int>(Seq.empty)

    t.Start()
    for i in 1..100000 do
        m1<-m1.Add(i, i)
    for i in 1..100000 do
        m1<-m1.Remove(i)
    t.Stop()
    printfn "%A" (t.ElapsedMilliseconds.ToString())

    t.Restart()
    for i in 1..100000 do
        m2<-m2.Add(i, i)
    for i in 1..100000 do
        m2<-m2.Remove(i)
    t.Stop()
    printfn "%A" (t.ElapsedMilliseconds.ToString())

test4()
